apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: ci-dev-ska-ser-test-equipment
spec: {}
status: {}
---
# Source: ska-ser-test-equipment-test-parent/charts/ska-tango-base/templates/deviceservers.yaml
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tangotest-sa-test
  namespace: ci-dev-ska-ser-test-equipment
---
# Source: ska-ser-test-equipment-test-parent/charts/test_equipment/templates/deviceservers.yaml
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: signalgenerator-sa-test
  namespace: ci-dev-ska-ser-test-equipment
---
# Source: ska-ser-test-equipment-test-parent/charts/ska-tango-base/templates/deviceservers.yaml
---
# Device Server configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: tangotest-test-dsconfig-json
  namespace: ci-dev-ska-ser-test-equipment
  labels:
    app: ska-tango-images
    component: configurator
    function: deployment
    intent: enabling
    domain: self-configuration
  annotations:
    app.gitlab.com/app: CI_PROJECT_PATH_SLUG
    app.gitlab.com/env: CI_ENVIRONMENT_SLUG
data:
  configuration.json: |
    {
      "servers": {
        "TangoTest" : {
          "test": {
            "TangoTest": {
              "sys/tg_test/1": {
              }
            }
          }
        }
      }
    }
  bootstrap.sh: |
    #/bin/sh
    json2tango -w -a -u data/configuration.json
    rc=$?
    if [ $rc -eq 0 ]; then
      echo "finished normally."
      exit 0
    else
      if [ $rc -eq 2 ]; then
        echo "finished with an update."
        exit 0
      else
        echo "finished with an ERROR."
        exit $rc
      fi
    fi
  TangoTest.py: |
    import importlib
    import importlib.util
    from tango.server import run

    classes = []

    def main(args=None, **kwargs):
      
      return run(classes=(classes), args=args, **kwargs)

    if __name__ == '__main__':
        main()
---
# Source: ska-ser-test-equipment-test-parent/charts/test_equipment/templates/deviceservers.yaml
---
# Device Server configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: signalgenerator-test-dsconfig-json
  namespace: ci-dev-ska-ser-test-equipment
  labels:
    app: ska-ser-test-equipment
    component: configurator
    function: deployment
    intent: enabling
    domain: self-configuration
  annotations:
    null
data:
  configuration.json: |
    {
      "servers": {
        "SignalGeneratorDevice" : {
          "tsg4104a": {
            "SignalGeneratorDevice": {
              "test-itf/siggen/1": {
                "properties": {
                  "Model": [
                    "TSG4104A"
                    ],
                  "Protocol": [
                    "tcp"
                    ],
                  "Host": [
                    "simulator-tsg4104a"
                    ],
                  "Port": [
                    "5025"
                    ],
                  "PollRate": [
                    "1.0"
                    ],
                  "PollTimeout": [
                    "1.0"
                    ]
                }
              }
            }
          },
          "smb100a": {
            "SignalGeneratorDevice": {
              "test-itf/siggen/2": {
                "properties": {
                  "Model": [
                    "SMB100A"
                    ],
                  "Protocol": [
                    "tcp"
                    ],
                  "Host": [
                    "simulator-smb100a"
                    ],
                  "Port": [
                    "5025"
                    ],
                  "PollRate": [
                    "1.0"
                    ],
                  "PollTimeout": [
                    "1.0"
                    ]
                }
              }
            }
          }
        }
      }
    }
  bootstrap.sh: |
    #/bin/sh
    json2tango -w -a -u data/configuration.json
    rc=$?
    if [ $rc -eq 0 ]; then
      echo "finished normally."
      exit 0
    else
      if [ $rc -eq 2 ]; then
        echo "finished with an update."
        exit 0
      else
        echo "finished with an ERROR."
        exit $rc
      fi
    fi
  SignalGeneratorDevice.py: |
    import importlib
    import importlib.util
    from tango.server import run

    classes = []

    def main(args=None, **kwargs):
      
      return run(classes=(classes), args=args, **kwargs)

    if __name__ == '__main__':
        main()
---
# Source: ska-ser-test-equipment-test-parent/charts/ska-tango-base/templates/deviceservers.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tangotest-role-test
  namespace: ci-dev-ska-ser-test-equipment
rules:
- apiGroups: ["", "batch", "apps"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
---
# Source: ska-ser-test-equipment-test-parent/charts/test_equipment/templates/deviceservers.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: signalgenerator-role-test
  namespace: ci-dev-ska-ser-test-equipment
rules:
- apiGroups: ["", "batch", "apps"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
---
# Source: ska-ser-test-equipment-test-parent/charts/ska-tango-base/templates/deviceservers.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tangotest-role-bind-test
  namespace: ci-dev-ska-ser-test-equipment
subjects:
- kind: ServiceAccount
  name: tangotest-sa-test
  namespace: ci-dev-ska-ser-test-equipment
roleRef:
  kind: Role
  name: tangotest-role-test
  apiGroup: rbac.authorization.k8s.io
---
# Source: ska-ser-test-equipment-test-parent/charts/test_equipment/templates/deviceservers.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: signalgenerator-role-bind-test
  namespace: ci-dev-ska-ser-test-equipment
subjects:
- kind: ServiceAccount
  name: signalgenerator-sa-test
  namespace: ci-dev-ska-ser-test-equipment
roleRef:
  kind: Role
  name: signalgenerator-role-test
  apiGroup: rbac.authorization.k8s.io
---
# Source: ska-ser-test-equipment-test-parent/charts/ska-tango-base/templates/databaseds.yaml
apiVersion: v1
kind: Service
metadata:
  name: databaseds-tango-base-test
  namespace: ci-dev-ska-ser-test-equipment
  labels:
    component: databaseds
    function: tangodb-interface
    domain: tango-configuration
    intent: production
    app: ska-tango-images

  annotations:
    app.gitlab.com/app: CI_PROJECT_PATH_SLUG
    app.gitlab.com/env: CI_ENVIRONMENT_SLUG

spec:
  ports:
  - name: ds
    port: 10000
  type: LoadBalancer
  selector:
    component: databaseds
    function: tangodb-interface
    domain: tango-configuration
    intent: production
    app: ska-tango-images
---
# Source: ska-ser-test-equipment-test-parent/charts/ska-tango-base/templates/deviceservers.yaml
# one k8s service per instance
apiVersion: v1
kind: Service
metadata:
  name: tangotest-test
  namespace: ci-dev-ska-ser-test-equipment
  labels:
    app: ska-tango-images
    component: tangotest-test
    function: tango-test
    domain: tango-base
    subsystem: ska-tango-base

  annotations:
    app.gitlab.com/app: CI_PROJECT_PATH_SLUG
    app.gitlab.com/env: CI_ENVIRONMENT_SLUG

spec:
  type: LoadBalancer
  ports:
  - name: tango-server
    port: 45450
    targetPort: 45450
  - name: tango-heartbeat
    port: 45460
    targetPort: 45460
  - name: tango-event
    port: 45470
    targetPort: 45470
  selector:
    subsystem: ska-tango-base
    component: tangotest-test
---
# Source: ska-ser-test-equipment-test-parent/charts/ska-tango-base/templates/tangodb.yaml
apiVersion: v1
kind: Service
metadata:
  name: ska-tango-base-tangodb
  namespace: ci-dev-ska-ser-test-equipment
  labels:
    component: tangodb
    function: tango-device-configuration
    domain: tango-configuration
    intent: production
    app: ska-tango-images

  annotations:
    app.gitlab.com/app: CI_PROJECT_PATH_SLUG
    app.gitlab.com/env: CI_ENVIRONMENT_SLUG

spec:
  ports:
  - name: mysql
    port: 3306
  type: NodePort
  selector:
    component: tangodb
    function: tango-device-configuration
    domain: tango-configuration
    intent: production
    app: ska-tango-images
---
# Source: ska-ser-test-equipment-test-parent/charts/test_equipment/templates/deviceservers.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: simulator-tsg4104a
  namespace: ci-dev-ska-ser-test-equipment
  labels:
    component: simulator-tsg4104a
    function: device-simulation
    domain: simulation
    intent: enabling
spec:
  ports:
  - name: tcp
    port: 5025
  type: ClusterIP
  selector:
    component: simulator-tsg4104a
    function: device-simulation
    domain: simulation
    intent: enabling
---
# Source: ska-ser-test-equipment-test-parent/charts/test_equipment/templates/deviceservers.yaml
apiVersion: v1
kind: Service
metadata:
  name: simulator-smb100a
  namespace: ci-dev-ska-ser-test-equipment
  labels:
    component: simulator-smb100a
    function: device-simulation
    domain: simulation
    intent: enabling
spec:
  ports:
  - name: tcp
    port: 5025
  type: ClusterIP
  selector:
    component: simulator-smb100a
    function: device-simulation
    domain: simulation
    intent: enabling
---
# Source: ska-ser-test-equipment-test-parent/charts/test_equipment/templates/deviceservers.yaml
# one k8s service per instance
apiVersion: v1
kind: Service
metadata:
  name: signalgenerator-tsg4104a
  namespace: ci-dev-ska-ser-test-equipment
  labels:
    app: ska-ser-test-equipment
    component: signalgenerator-tsg4104a
    function: ska-ser-test-equipment-signal-generator
    domain: ska-ser-test-equipment
    subsystem: ska-ser-test-equipment

spec:
  type: LoadBalancer
  ports:
  - name: tango-server
    port: 45450
    targetPort: 45450
  - name: tango-heartbeat
    port: 45460
    targetPort: 45460
  - name: tango-event
    port: 45470
    targetPort: 45470
  selector:
    subsystem: ska-ser-test-equipment
    component: signalgenerator-tsg4104a
---
# Source: ska-ser-test-equipment-test-parent/charts/test_equipment/templates/deviceservers.yaml
# one k8s service per instance
apiVersion: v1
kind: Service
metadata:
  name: signalgenerator-smb100a
  namespace: ci-dev-ska-ser-test-equipment
  labels:
    app: ska-ser-test-equipment
    component: signalgenerator-smb100a
    function: ska-ser-test-equipment-signal-generator
    domain: ska-ser-test-equipment
    subsystem: ska-ser-test-equipment

spec:
  type: LoadBalancer
  ports:
  - name: tango-server
    port: 45450
    targetPort: 45450
  - name: tango-heartbeat
    port: 45460
    targetPort: 45460
  - name: tango-event
    port: 45470
    targetPort: 45470
  selector:
    subsystem: ska-ser-test-equipment
    component: signalgenerator-smb100a
---
# Source: ska-ser-test-equipment-test-parent/charts/ska-tango-base/templates/itango.yaml
apiVersion: v1
kind: Pod
metadata:
  name: ska-tango-base-itango-console
  namespace: ci-dev-ska-ser-test-equipment
  labels:
    app: ska-tango-images
    component: itango-console
    function: generic-tango-console
    domain: interactive-testing
    intent: enabling

  annotations:
    app.gitlab.com/app: CI_PROJECT_PATH_SLUG
    app.gitlab.com/env: CI_ENVIRONMENT_SLUG

spec:
  initContainers:
  - name: check-dependencies-0
    image: "artefact.skao.int/ska-tango-images-tango-dsconfig:1.5.5"
    imagePullPolicy: IfNotPresent
    command:
      - retry
      - --tries=10 
      - --sleep=5
      - --
      - tango_admin
      - --check-device
      - sys/database/2
    env:
    - name: TANGO_HOST
      value: databaseds-tango-base-test:10000
  containers:
  - name: itango
    image: "artefact.skao.int/ska-tango-images-tango-itango:9.3.9"
    imagePullPolicy: IfNotPresent
    command:
      - /usr/local/bin/wait-for-it.sh
      - databaseds-tango-base-test:10000
      - --timeout=30
      - --strict
      - --
      - sleep
      - infinity
      # - /venv/bin/itango3
    env:
    - name: TANGO_HOST
      value: "databaseds-tango-base-test:10000"
    resources:
      limits:
        cpu: 100m
        ephemeral-storage: 512Mi
        memory: 128Mi
      requests:
        cpu: 100m
        ephemeral-storage: 512Mi
        memory: 128Mi
  restartPolicy: Always
---
# Source: ska-ser-test-equipment-test-parent/charts/ska-tango-base/templates/databaseds.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: databaseds-tango-base-test
  namespace: ci-dev-ska-ser-test-equipment
  labels:
    component: databaseds
    function: tangodb-interface
    domain: tango-configuration
    intent: production
    app: ska-tango-images

  annotations:
    app.gitlab.com/app: CI_PROJECT_PATH_SLUG
    app.gitlab.com/env: CI_ENVIRONMENT_SLUG

spec:
  selector:
    matchLabels:
      component: databaseds
      function: tangodb-interface
      domain: tango-configuration
      intent: production
      app: ska-tango-images
  serviceName: databaseds-tango-base-test
  replicas: 1
  template:
    metadata:
      labels:
        component: databaseds
        function: tangodb-interface
        domain: tango-configuration
        intent: production
        app: ska-tango-images
      annotations:
        

        app.gitlab.com/app: CI_PROJECT_PATH_SLUG
        app.gitlab.com/env: CI_ENVIRONMENT_SLUG

    spec:
      containers:
      - name: databaseds
        image: "artefact.skao.int/ska-tango-images-tango-cpp:9.3.11"
        imagePullPolicy: IfNotPresent
        command:
          - retry 
          - --tries=10
          - --sleep=5
          - --

          - /usr/local/bin/wait-for-it.sh #  ST-1064: allow the file to not exist if running on min

          - ska-tango-base-tangodb:3306
          - --timeout=60
          - --strict
          - --
          - /usr/local/bin/DataBaseds
          - "2"
          - -ORBendPoint
          - giop:tcp::10000
          - -ORBendPointPublish
          - giop:tcp:$(TANGO_SERVER_PUBLISH_HOSTNAME):10000
        env:
          - name: MYSQL_HOST
            value: "ska-tango-base-tangodb:3306"
          - name: MYSQL_DATABASE
            value: "tango"
          - name: MYSQL_USER
            value: "tango"
          - name: MYSQL_PASSWORD
            value: "tango"  # ST-1064: Check if this overwrites the injected value            
          - name: TANGO_SERVER_PUBLISH_HOSTNAME
            value: databaseds-tango-base-test.ci-dev-ska-ser-test-equipment.svc.cluster.local            
        ports:
        - name: ds
          containerPort: 10000
        readinessProbe:
          tcpSocket:
            port: 10000
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          tcpSocket:
            port: 10000
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        resources:
          limits:
            cpu: 200m
            ephemeral-storage: 1Gi
            memory: 256Mi
          requests:
            cpu: 100m
            ephemeral-storage: 512Mi
            memory: 128Mi
---
# Source: ska-ser-test-equipment-test-parent/charts/ska-tango-base/templates/deviceservers.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tangotest-test
  namespace: ci-dev-ska-ser-test-equipment
  labels:
    app: ska-tango-images
    component: tangotest-test
    function: tango-test
    domain: tango-base
    subsystem: ska-tango-base

  annotations:
    app.gitlab.com/app: CI_PROJECT_PATH_SLUG
    app.gitlab.com/env: CI_ENVIRONMENT_SLUG

spec:
  selector:
    matchLabels:
      component: tangotest-test
      subsystem: ska-tango-base
  serviceName: tangotest-test
  replicas: 1
  template:
    metadata:
      labels:
        component: tangotest-test
        function: tango-test
        domain: tango-base
        subsystem: ska-tango-base
        app: ska-tango-images
    
      annotations:
        app.gitlab.com/app: CI_PROJECT_PATH_SLUG
        app.gitlab.com/env: CI_ENVIRONMENT_SLUG
    
    spec:
      volumes:
        - name: configuration
          configMap:
            name: tangotest-test-dsconfig-json
        
      serviceAccountName: tangotest-sa-test
      initContainers:
      - name: wait-for-configuration
        image: "bitnami/kubectl:latest"
        imagePullPolicy: IfNotPresent
        command:
          - sh
          - -c
        args:
          - kubectl wait job --for=condition=complete tangotest-test-config --timeout=120s




      - name: check-dependencies-0
        image: "artefact.skao.int/ska-tango-images-tango-dsconfig:1.5.5"
        imagePullPolicy: IfNotPresent
        command:
          - retry
          - --sleep=1
          - --tries=100
          - --
          - tango_admin
          - --ping-device
          - sys/database/2
        env:
        - name: TANGO_HOST
          value: databaseds-tango-base-test:10000
      containers:
      - name: device-server
        image: "artefact.skao.int/ska-tango-images-tango-java:9.3.7"
        imagePullPolicy: IfNotPresent
        command:
          - retry
          - --sleep=1
          - --tries=100
          - --
          - /usr/local/bin/TangoTest
          - "test"
          - -ORBendPoint
          - giop:tcp::$(TANGO_SERVER_PORT)
          - -ORBendPointPublish
          - giop:tcp:$(TANGO_SERVER_PUBLISH_HOSTNAME):$(TANGO_SERVER_PORT)
        ports:
        - containerPort: 45450
          name: tango-server
        - containerPort: 45460
          name: tango-heartbeat
        - containerPort: 45470
          name: tango-event
        volumeMounts:
          - name: configuration
            mountPath: data
            readOnly: true
          
        livenessProbe:
          exec:
            command:
            - "sh"
            - "-c"
          
          
          
          
            - tango_admin
            - --ping-device
          
            - sys/tg_test/1
          
          
          
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - "sh"
            - "-c"
          
          
          
          
            - tango_admin
            - --ping-device
          
            - sys/tg_test/1
          
          
          
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        env:
        - name: TANGO_HOST
          value: databaseds-tango-base-test:10000
        - name: TANGO_SERVER_PORT
          value: "45450"
        - name: TANGO_ZMQ_HEARTBEAT_PORT
          value: "45460"
        - name: TANGO_ZMQ_EVENT_PORT
          value: "45470"
        - name: TANGO_SERVER_PUBLISH_HOSTNAME
          value: tangotest-test.ci-dev-ska-ser-test-equipment.svc.cluster.local

        resources:
          limits:
            cpu: 500m
            ephemeral-storage: 1Gi
            memory: 512Mi
          requests:
            cpu: 200m
            ephemeral-storage: 1Gi
            memory: 256Mi
---
# Source: ska-ser-test-equipment-test-parent/charts/ska-tango-base/templates/tangodb.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ska-tango-base-tangodb
  namespace: ci-dev-ska-ser-test-equipment
  labels:
    component: tangodb
    function: tango-device-configuration
    domain: tango-configuration
    intent: production
    app: ska-tango-images

  annotations:
    app.gitlab.com/app: CI_PROJECT_PATH_SLUG
    app.gitlab.com/env: CI_ENVIRONMENT_SLUG

spec:
  selector:
    matchLabels:
      component: tangodb
      function: tango-device-configuration
      domain: tango-configuration
      intent: production
      app: ska-tango-images
  serviceName: ska-tango-base-tangodb
  replicas: 1
  template:
    metadata:
      labels:
        component: tangodb
        function: tango-device-configuration
        domain: tango-configuration
        intent: production
        app: ska-tango-images
      annotations:
        

        app.gitlab.com/app: CI_PROJECT_PATH_SLUG
        app.gitlab.com/env: CI_ENVIRONMENT_SLUG

    spec:
      containers:
      - name: tangodb
        image: "artefact.skao.int/ska-tango-images-tango-db:10.4.17"
        imagePullPolicy: IfNotPresent
        
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: "secret"
          - name: MYSQL_DATABASE
            value: "tango"
          - name: MYSQL_USER
            value: "tango"
          - name: MYSQL_PASSWORD
            value: "tango"
          - name: MYSQL_ALLOW_EMPTY_PASSWORD
            value: "1"
        ports:
        - name: mysql
          containerPort: 3306

        resources:
          limits:
            cpu: 200m
            ephemeral-storage: 2Gi
            memory: 256Mi
          requests:
            cpu: 100m
            ephemeral-storage: 1Gi
            memory: 256Mi
      volumes:
---
# Source: ska-ser-test-equipment-test-parent/charts/test_equipment/templates/deviceservers.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: simulator-tsg4104a
  namespace: ci-dev-ska-ser-test-equipment
  labels:
    component: simulator-tsg4104a
    function: device-simulation
    domain: simulation
    intent: enabling
spec:
  selector:
    matchLabels:
      component: simulator-tsg4104a
      function: device-simulation
      domain: simulation
      intent: enabling
  serviceName: simulator-tsg4104a
  replicas: 1
  template:
    metadata:
      labels:
        component: simulator-tsg4104a
        function: device-simulation
        domain: simulation
        intent: enabling
    spec:
      containers:
      - name: simulator
        image: "artefact.skao.int/ska-ser-test-equipment:0.2.0"
        imagePullPolicy: IfNotPresent
        command:
          - "SignalGeneratorDeviceSimulator"
        env:
          - name: SIMULATOR_MODEL
            value: TSG4104A
          - name: SIMULATOR_PORT
            value: "5025"
---
# Source: ska-ser-test-equipment-test-parent/charts/test_equipment/templates/deviceservers.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: simulator-smb100a
  namespace: ci-dev-ska-ser-test-equipment
  labels:
    component: simulator-smb100a
    function: device-simulation
    domain: simulation
    intent: enabling
spec:
  selector:
    matchLabels:
      component: simulator-smb100a
      function: device-simulation
      domain: simulation
      intent: enabling
  serviceName: simulator-smb100a
  replicas: 1
  template:
    metadata:
      labels:
        component: simulator-smb100a
        function: device-simulation
        domain: simulation
        intent: enabling
    spec:
      containers:
      - name: simulator
        image: "artefact.skao.int/ska-ser-test-equipment:0.2.0"
        imagePullPolicy: IfNotPresent
        command:
          - "SignalGeneratorDeviceSimulator"
        env:
          - name: SIMULATOR_MODEL
            value: SMB100A
          - name: SIMULATOR_PORT
            value: "5025"
---
# Source: ska-ser-test-equipment-test-parent/charts/test_equipment/templates/deviceservers.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: signalgenerator-tsg4104a
  namespace: ci-dev-ska-ser-test-equipment
  labels:
    app: ska-ser-test-equipment
    component: signalgenerator-tsg4104a
    function: ska-ser-test-equipment-signal-generator
    domain: ska-ser-test-equipment
    subsystem: ska-ser-test-equipment

spec:
  selector:
    matchLabels:
      component: signalgenerator-tsg4104a
      subsystem: ska-ser-test-equipment
  serviceName: signalgenerator-tsg4104a
  replicas: 1
  template:
    metadata:
      labels:
        component: signalgenerator-tsg4104a
        function: ska-ser-test-equipment-signal-generator
        domain: ska-ser-test-equipment
        subsystem: ska-ser-test-equipment
        app: ska-ser-test-equipment
    
    spec:
      volumes:
        - name: configuration
          configMap:
            name: signalgenerator-test-dsconfig-json
        
      serviceAccountName: signalgenerator-sa-test
      initContainers:
      - name: wait-for-configuration
        image: "bitnami/kubectl:latest"
        imagePullPolicy: IfNotPresent
        command:
          - sh
          - -c
        args:
          - kubectl wait job --for=condition=complete signalgenerator-test-config --timeout=300s




      - name: check-dependencies-0
        image: "artefact.skao.int/ska-tango-images-tango-dsconfig:1.5.5"
        imagePullPolicy: IfNotPresent
        command:
          - retry
          - --tries=10
          - --sleep=5
          - --
          - tango_admin
          - --ping-device
          - sys/database/2
        env:
        - name: TANGO_HOST
          value: databaseds-tango-base-test:10000
      containers:
      - name: device-server
        image: "artefact.skao.int/ska-ser-test-equipment:0.2.0"
        imagePullPolicy: IfNotPresent
        command:
          - retry
          - --tries=10
          - --sleep=5
          - --
          - SignalGeneratorDevice
          - "tsg4104a"
          - -ORBendPoint
          - giop:tcp::$(TANGO_SERVER_PORT)
          - -ORBendPointPublish
          - giop:tcp:$(TANGO_SERVER_PUBLISH_HOSTNAME):$(TANGO_SERVER_PORT)
        ports:
        - containerPort: 45450
          name: tango-server
        - containerPort: 45460
          name: tango-heartbeat
        - containerPort: 45470
          name: tango-event
        volumeMounts:
          - name: configuration
            mountPath: data
            readOnly: true
          
        livenessProbe:
          exec:
            command:
            - "sh"
            - "-c"
          
          
          
          
            - tango_admin
            - --ping-device
          
            - test-itf/siggen/1
          
          
          
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - "sh"
            - "-c"
          
          
          
          
            - tango_admin
            - --ping-device
          
            - test-itf/siggen/1
          
          
          
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        env:
        - name: TANGO_HOST
          value: databaseds-tango-base-test:10000
        - name: TANGO_SERVER_PORT
          value: "45450"
        - name: TANGO_ZMQ_HEARTBEAT_PORT
          value: "45460"
        - name: TANGO_ZMQ_EVENT_PORT
          value: "45470"
        - name: TANGO_SERVER_PUBLISH_HOSTNAME
          value: signalgenerator-tsg4104a.ci-dev-ska-ser-test-equipment.svc.cluster.local

        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 50Mi
---
# Source: ska-ser-test-equipment-test-parent/charts/test_equipment/templates/deviceservers.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: signalgenerator-smb100a
  namespace: ci-dev-ska-ser-test-equipment
  labels:
    app: ska-ser-test-equipment
    component: signalgenerator-smb100a
    function: ska-ser-test-equipment-signal-generator
    domain: ska-ser-test-equipment
    subsystem: ska-ser-test-equipment

spec:
  selector:
    matchLabels:
      component: signalgenerator-smb100a
      subsystem: ska-ser-test-equipment
  serviceName: signalgenerator-smb100a
  replicas: 1
  template:
    metadata:
      labels:
        component: signalgenerator-smb100a
        function: ska-ser-test-equipment-signal-generator
        domain: ska-ser-test-equipment
        subsystem: ska-ser-test-equipment
        app: ska-ser-test-equipment
    
    spec:
      volumes:
        - name: configuration
          configMap:
            name: signalgenerator-test-dsconfig-json
        
      serviceAccountName: signalgenerator-sa-test
      initContainers:
      - name: wait-for-configuration
        image: "bitnami/kubectl:latest"
        imagePullPolicy: IfNotPresent
        command:
          - sh
          - -c
        args:
          - kubectl wait job --for=condition=complete signalgenerator-test-config --timeout=300s




      - name: check-dependencies-0
        image: "artefact.skao.int/ska-tango-images-tango-dsconfig:1.5.5"
        imagePullPolicy: IfNotPresent
        command:
          - retry
          - --tries=10
          - --sleep=5
          - --
          - tango_admin
          - --ping-device
          - sys/database/2
        env:
        - name: TANGO_HOST
          value: databaseds-tango-base-test:10000
      containers:
      - name: device-server
        image: "artefact.skao.int/ska-ser-test-equipment:0.2.0"
        imagePullPolicy: IfNotPresent
        command:
          - retry
          - --tries=10
          - --sleep=5
          - --
          - SignalGeneratorDevice
          - "smb100a"
          - -ORBendPoint
          - giop:tcp::$(TANGO_SERVER_PORT)
          - -ORBendPointPublish
          - giop:tcp:$(TANGO_SERVER_PUBLISH_HOSTNAME):$(TANGO_SERVER_PORT)
        ports:
        - containerPort: 45450
          name: tango-server
        - containerPort: 45460
          name: tango-heartbeat
        - containerPort: 45470
          name: tango-event
        volumeMounts:
          - name: configuration
            mountPath: data
            readOnly: true
          
        livenessProbe:
          exec:
            command:
            - "sh"
            - "-c"
          
          
          
          
            - tango_admin
            - --ping-device
          
            - test-itf/siggen/2
          
          
          
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - "sh"
            - "-c"
          
          
          
          
            - tango_admin
            - --ping-device
          
            - test-itf/siggen/2
          
          
          
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        env:
        - name: TANGO_HOST
          value: databaseds-tango-base-test:10000
        - name: TANGO_SERVER_PORT
          value: "45450"
        - name: TANGO_ZMQ_HEARTBEAT_PORT
          value: "45460"
        - name: TANGO_ZMQ_EVENT_PORT
          value: "45470"
        - name: TANGO_SERVER_PUBLISH_HOSTNAME
          value: signalgenerator-smb100a.ci-dev-ska-ser-test-equipment.svc.cluster.local

        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 50Mi
---
# Source: ska-ser-test-equipment-test-parent/charts/ska-tango-base/templates/deviceservers.yaml
---
# run once Job for loading Device Server config
apiVersion: batch/v1
kind: Job
metadata:
  name: tangotest-test-config
  namespace: ci-dev-ska-ser-test-equipment
  labels:
    app: ska-tango-images
    component: configurator
    function: deployment
    intent: enabling
    domain: self-configuration

  annotations:
    app.gitlab.com/app: CI_PROJECT_PATH_SLUG
    app.gitlab.com/env: CI_ENVIRONMENT_SLUG

spec:
  ttlSecondsAfterFinished: 3600
  template:
    spec:
      initContainers:
      - name: check-databaseds-ready
        image: artefact.skao.int/ska-tango-images-tango-dsconfig:1.5.5
        imagePullPolicy: IfNotPresent
        command:
          - sh
          - -c
        args:
          - retry
          - --sleep=1
          - --tries=100
          - --
          - tango_admin
          - --check-device
          - sys/database/2
        env:
        - name: TANGO_HOST
          value: databaseds-tango-base-test:10000
      containers:
      - name: dsconfig
        image: "artefact.skao.int/ska-tango-images-tango-dsconfig:1.5.5"
        imagePullPolicy: IfNotPresent
        command: # exit code 2 is CONFIG_APPLIED - https://github.com/MaxIV-KitsControls/lib-maxiv-dsconfig/blob/master/dsconfig/utils.py#L11 !!!! this should not be an error !!!!
          - retry
          - --sleep=1
          - --tries=100
          - --
          - sh
          - data/bootstrap.sh
        env:
        - name: TANGO_HOST
          value: databaseds-tango-base-test:10000
        volumeMounts:
          - name: configuration
            mountPath: data
            readOnly: true
      volumes:
        - name: configuration
          configMap:
            name: tangotest-test-dsconfig-json
      restartPolicy: Never
---
# Source: ska-ser-test-equipment-test-parent/charts/test_equipment/templates/deviceservers.yaml
---
# run once Job for loading Device Server config
apiVersion: batch/v1
kind: Job
metadata:
  name: signalgenerator-test-config
  namespace: ci-dev-ska-ser-test-equipment
  labels:
    app: ska-ser-test-equipment
    component: configurator
    function: deployment
    intent: enabling
    domain: self-configuration

spec:
  ttlSecondsAfterFinished: 3600
  template:
    spec:
      initContainers:
      - name: check-databaseds-ready
        image: artefact.skao.int/ska-tango-images-tango-dsconfig:1.5.5
        imagePullPolicy: IfNotPresent
        command:
          - sh
          - -c
        args:
          - retry
          - --tries=10
          - --sleep=5
          - --
          - tango_admin
          - --check-device
          - sys/database/2
        env:
        - name: TANGO_HOST
          value: databaseds-tango-base-test:10000
      containers:
      - name: dsconfig
        image: "artefact.skao.int/ska-tango-images-tango-dsconfig:1.5.5"
        imagePullPolicy: IfNotPresent
        command: # exit code 2 is CONFIG_APPLIED - https://github.com/MaxIV-KitsControls/lib-maxiv-dsconfig/blob/master/dsconfig/utils.py#L11 !!!! this should not be an error !!!!
          - retry
          - --tries=10
          - --sleep=5
          - --
          - sh
          - data/bootstrap.sh
        env:
        - name: TANGO_HOST
          value: databaseds-tango-base-test:10000
        volumeMounts:
          - name: configuration
            mountPath: data
            readOnly: true
      volumes:
        - name: configuration
          configMap:
            name: signalgenerator-test-dsconfig-json
      restartPolicy: Never
---
# Source: ska-ser-test-equipment-test-parent/charts/ska-tango-base/templates/deviceservers.yaml
---
---
# Source: ska-ser-test-equipment-test-parent/charts/ska-tango-base/templates/deviceservers.yaml
## if has

 # range instances



 # deviceservers
---
# Source: ska-ser-test-equipment-test-parent/charts/test_equipment/templates/deviceservers.yaml
---
---
# Source: ska-ser-test-equipment-test-parent/charts/test_equipment/templates/deviceservers.yaml
## if has
---
# Source: ska-ser-test-equipment-test-parent/charts/test_equipment/templates/deviceservers.yaml
## if has

 # range instances

 # deviceservers
